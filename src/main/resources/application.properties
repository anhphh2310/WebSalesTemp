# ===============================
# = DATA SOURCE POSTGRESQL
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:postgresql://localhost:5432/datraining
spring.datasource.username=root
spring.datasource.password=13245678x@X
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

# Apache Cassandra
spring.data.cassandra.keyspace-name=datraining
spring.data.cassandra.contact-points=localhost
spring.data.cassandra.port=9042
#spring.data.cassandra.schema-action=create_if_not_exists
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.jackson.serialization.fail-on-empty-beans=false

# Logging
loggin.level.root=WARN
logging.level.org.springframework.web=debug
#logging.level.tma.datraining=TRACE
#logging.level.tma.datraining.controller=error
logging.level.tma.datraining.controller=debug
#logging.level.org.springframework.orm.jpa=debug
#logging.level.org.springframework.transaction=debug

# Logging pattern for the console
logging.pattern.console= "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Logging pattern for file
logging.pattern.file= "%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n"

logging.file=src/main/resources/log/application.log

